server:
  port: 8080

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
   cloud:
     gateway:
       globalcors:
         cors-configurations:
           '[/**]':
             allowedOrigins: "http://localhost:5173"
             allowedHeaders:
               - "*"
             allowedMethods:
               - "GET"
               - "POST"
               - "PUT"
               - "DELETE"
               - "OPTIONS"
             allowCredentials: true
       default-filters:
         - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
         - name: GlobalFilter
           args:
             baseMessage: msa
             preLogger: true
             postLogger: true
       routes:
         - id: login-service
           uri: http://localhost:9001/
           predicates:
             - Path=/api/v1/auth/**
            
         - id: login-service-user
           uri: http://localhost:9001/
           predicates:
             - Path=/api/v1/user/**

         - id: booknote-service
           uri: http://localhost:9002/
           predicates:
             - Path=/api/books/**
           filters:
             - JwtAuthFilter

         - id: recommend-service
           uri: http://localhost:9003/
           predicates:
             - Path=/api/recommend/**

         - id: search-service
           uri: http://localhost:9004/
           predicates:
             - Path=/api/book/**

         - id: library-service
           uri: http://localhost:9005/
           predicates:
             - Path=/api/libraries/**

         - id: favorite-service
           uri: http://localhost:9006/
           predicates:
             - Path=/api/favorites/**
           filters:
             - JwtAuthFilter

         - id: my-react-app
           uri: http://localhost:5173
           predicates:
             - Path=/**
            
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true


jwt:
  secret: ohseokju@!ohseokju@!ohseokju@!ohseokju@!ohseokju@!
  accessTokenExpirationTime: 300000
